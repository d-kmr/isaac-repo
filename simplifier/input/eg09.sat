// Syntax
// (term)      t := <string>('@'<string>)* | '#'<string>'@'<string> | <int> | t '+' t | t '-' t | t '+-' t | t '*' t | t '%' <int> | <string>'(' t* ')'
// (pure atom) p := t '=' t | t "<>" t | t '<' t | t "<=" t | t '>' t | t ">=" t | "True" | "False" | (P)
// (pure)      P := p | P '&' P | P '&' P | P '|' P | "All" <string>(',' <string>)* P | "Ex" <string>(',' <string>)* P 
// (fieldterm) f := t | <string> ':' t  
// (spat atom) s := "Emp" | t "->" '(' f* ')' | "Arr" '(' t ',' t ')' | "Str" '(' t ',' t ')'
// (spat)      S := s | S '*' S
// (symb.heap) H := P "&&" S

// 00-09: 0.018s
// 00-19: 0.027s
// 00-29: 0.048s
// 00-39: 0.074s
// 00-49: 0.106s
// 00-59: 0.175s
// 00-69: 0.240s
// 00-79: 0.324s
// 00-89: 0.449s
// 00-99: 0.570s

(x00 < 10 | 20 < x00) &
(x01 < 10 | 20 < x01) &
(x02 < 10 | 20 < x02) &
(x03 < 10 | 20 < x03) &
(x04 < 10 | 20 < x04) &
(x05 < 10 | 20 < x05) &
(x06 < 10 | 20 < x06) &
(x07 < 10 | 20 < x07) &
(x08 < 10 | 20 < x08) &
(x09 < 10 | 20 < x09) 
//(x10 < 10 | 20 < x10) &
//(x11 < 10 | 20 < x11) &
//(x12 < 10 | 20 < x12) &
//(x13 < 10 | 20 < x13) &
//(x14 < 10 | 20 < x14) &
//(x15 < 10 | 20 < x15) &
//(x16 < 10 | 20 < x16) &
//(x17 < 10 | 20 < x17) &
//(x18 < 10 | 20 < x18) &
//(x19 < 10 | 20 < x19) &
//(x20 < 10 | 20 < x20) &
//(x21 < 10 | 20 < x21) &
//(x22 < 10 | 20 < x22) &
//(x23 < 10 | 20 < x23) &
//(x24 < 10 | 20 < x24) &
//(x25 < 10 | 20 < x25) &
//(x26 < 10 | 20 < x26) &
//(x27 < 10 | 20 < x27) &
//(x28 < 10 | 20 < x28) &
//(x29 < 10 | 20 < x29) &
//(x30 < 10 | 20 < x30) &
//(x31 < 10 | 20 < x31) &
//(x32 < 10 | 20 < x32) &
//(x33 < 10 | 20 < x33) &
//(x34 < 10 | 20 < x34) &
//(x35 < 10 | 20 < x35) &
//(x36 < 10 | 20 < x36) &
//(x37 < 10 | 20 < x37) &
//(x38 < 10 | 20 < x38) &
//(x39 < 10 | 20 < x39) &
//(x40 < 10 | 20 < x40) &
//(x41 < 10 | 20 < x41) &
//(x42 < 10 | 20 < x42) &
//(x43 < 10 | 20 < x43) &
//(x44 < 10 | 20 < x44) &
//(x45 < 10 | 20 < x45) &
//(x46 < 10 | 20 < x46) &
//(x47 < 10 | 20 < x47) &
//(x48 < 10 | 20 < x48) &
//(x49 < 10 | 20 < x49) &
//(x50 < 10 | 20 < x50) &
//(x51 < 10 | 20 < x51) &
//(x52 < 10 | 20 < x52) &
//(x53 < 10 | 20 < x53) &
//(x54 < 10 | 20 < x54) &
//(x55 < 10 | 20 < x55) &
//(x56 < 10 | 20 < x56) &
//(x57 < 10 | 20 < x57) &
//(x58 < 10 | 20 < x58) &
//(x59 < 10 | 20 < x59) &
//(x60 < 10 | 20 < x60) &
//(x61 < 10 | 20 < x61) &
//(x62 < 10 | 20 < x62) &
//(x63 < 10 | 20 < x63) &
//(x64 < 10 | 20 < x64) &
//(x65 < 10 | 20 < x65) &
//(x66 < 10 | 20 < x66) &
//(x67 < 10 | 20 < x67) &
//(x68 < 10 | 20 < x68) &
//(x69 < 10 | 20 < x69) &
//(x70 < 10 | 20 < x70) &
//(x71 < 10 | 20 < x71) &
//(x72 < 10 | 20 < x72) &
//(x73 < 10 | 20 < x73) &
//(x74 < 10 | 20 < x74) &
//(x75 < 10 | 20 < x75) &
//(x76 < 10 | 20 < x76) &
//(x77 < 10 | 20 < x77) &
//(x78 < 10 | 20 < x78) &
//(x79 < 10 | 20 < x79) &
//(x80 < 10 | 20 < x80) &
//(x81 < 10 | 20 < x81) &
//(x82 < 10 | 20 < x82) &
//(x83 < 10 | 20 < x83) &
//(x84 < 10 | 20 < x84) &
//(x85 < 10 | 20 < x85) &
//(x86 < 10 | 20 < x86) &
//(x87 < 10 | 20 < x87) &
//(x88 < 10 | 20 < x88) &
//(x89 < 10 | 20 < x89) &
//(x90 < 10 | 20 < x90) &
//(x91 < 10 | 20 < x91) &
//(x92 < 10 | 20 < x92) &
//(x93 < 10 | 20 < x93) &
//(x94 < 10 | 20 < x94) &
//(x95 < 10 | 20 < x95) &
//(x96 < 10 | 20 < x96) &
//(x97 < 10 | 20 < x97) &
//(x98 < 10 | 20 < x98) &
//(x99 < 10 | 20 < x99) 
&&
Emp