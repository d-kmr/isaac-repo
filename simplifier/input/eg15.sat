// Syntax
// (term)      t := <string>('@'<string>)* | '#'<string>'@'<string> | <int> | t '+' t | t '-' t | t '+-' t | t '*' t | t '%' <int> | <string>'(' t* ')'
// (pure atom) t '=' t | t "==" t | t "<>" t | t "!=" t | t '<' t | t "<=" t | t '>' t | t ">=" t | "True" | "False" | (P)
// (pure)      P := p | P '&' P | P '&' P | P '|' P | "All" <string>(',' <string>)* P | "Ex" <string>(',' <string>)* P 
// (fieldterm) f := t | <string> ':' t  
// (spat atom) s := "Emp" | t "->" '(' f* ')' | "Arr" '(' t ',' t ')' | "Str" '(' t ',' t ')' | "Ls" '(' t ',' t ')'
// (spat)      S := s | S '*' S
// (symb.heap) H := P "&" S

(t4'@bar!=0)
& (t4'@dotdot==0)
& (0<(t2'@hat+1))
& ((t2'@hat+1)<=(t2'@hat+t7'))
& (0<t2'@hat)
& (t2'@hat<=(t2'@hat+t7'))
& (t5'@bar==0)
& (1<=t8'@dot)
& (t8'@dot<=(t7'-1))
& (t5'@bar<=t3'@dot)
& (t3'@dot<=t5'@bar)
& (((t5'@dotdot==0) OR (t6'@dotdot==0)) OR (t7'@dotdot!=0))
& ((t2'@hat+t7')<(t2'@hat+(t7'+1)))
& (t2'@hat<(t2'@hat+t7'))
& ((t2'@hat<(t2'@hat+1)) OR ((t2'@hat+t7')<t2'@hat))
&&
Emp
